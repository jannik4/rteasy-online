initSidebarItems({"enum":[["Atom",""],["BinaryOperator",""],["BitRange",""],["BusKind",""],["ConcatPartExpr",""],["ConcatPartLvalueClocked",""],["ConcatPartLvalueUnclocked",""],["Criterion",""],["ExpressionKind",""],["Extend",""],["Lvalue",""],["NextStateLogic",""],["NumberKind",""],["Operation",""],["RegisterKind",""],["UnaryOperator",""]],"macro":[["vec1","A macro similar to `vec!` to create a `Vec1`."]],"mod":[["error",""]],"struct":[["And",""],["Assignment",""],["BinaryTerm",""],["Bus",""],["Concat",""],["CriterionId",""],["DebugInfo","Additional information that should not affect equality."],["Declarations",""],["Expression",""],["Ident",""],["IndexMap","A hash table where the iteration order of the key-value pairs is independent of the hash values of the keys."],["IndexSet","A hash set where the iteration order of the values is independent of their hash values."],["Label",""],["Number",""],["OperationId",""],["Or",""],["Read",""],["Register",""],["RegisterArray",""],["Signals",""],["Statement",""],["UnaryTerm",""],["Vec1","`std::vec::Vec` wrapper which guarantees to have at least 1 element."],["Vhdl",""],["Write",""]],"type":[["ConcatExpr",""],["ConcatLvalueClocked",""],["ConcatLvalueUnclocked",""]]});